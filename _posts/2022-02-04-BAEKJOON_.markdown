---
layout: post
title:  백준/Python/1002번
date:   2022-02-04 15:01:35 +0300
image:  '/images/BaekJoon.jpg'
tags:   [BAEKJOON]
---

### BAEKJOON_1002 [Python Algorithm] <br/>

**문제** <br/>
조규환과 백승환은 터렛에 근무하는 직원이다. 이석원은 조규현과 백승환에게 상대편 마린(류재명)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다. <br/> 

조규현의 좌표(X<sub>1</sub>, Y<sub>1</sub>)와 백승환의 좌표(X<sub>2</sub>, Y<sub>2</sub>)가 주어지고, 조규현이 계산한 류재명과의 거리 r<sub>1</sub>과 백승환이 계산한 류재명과의 거리 r<sub>2</sub>가 주어졌을 때, 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오<br/>

**입력** <br/>
첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 다음과 같이 이루어져 있다.
한 줄에 x<sub>1</sub>, y<sub>1</sub>, r<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>, r<sub>2</sub>가 주어진다. x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>는 -10,000보다 크거나 
같고, 10,000보다 작거나 같은 정수이고, r<sub>1</sub>, r<sub>2</sub>는 10,000보다 작거나 같은 자연수이다.<br/>

**출력** <br/>
각 테스트 케이스마다 류재명이 있을 수 있는 위치의 수를 출력한다. 만약 류재명이 있을 수 있는 위치의 개수가 무한대일 경우에는 -1을 출력한다.<br/>

___

**코드**
```python
import math

T = int(input()) 
#테스트케이스 개수(좌표 및 거리를 통해 류재명이 있을 수 있는 좌표의 수를 출력하는 테스트를 몇 번 반복할 것인지)

for i in range(T) : #테스트케이스 개수만큼 for문 반복
    x1, y1, r1, x2, y2, r2 = map(int, input().split()) #map()합수 : 리스트의 요소를 지정된 함수로 처리
    d = math.sqrt((x1-x2)**2 + (y1-y2)**2)
    
    if (d == 0) : 
        if (r1 == r2) : #두 원이 같은경우, 접점이 무한함으로 -1 출력
            print(-1)
        else : #동심원인 경우
            print(0)
        continue 
            
    if (d > r1+r2 or d!=0 and r1 > d+r2 or d!=0 and r2 > d+r1) : #두 원이 만나지 않는 경우거나 작은 원이 큰 원 내부에 포함된 경우
        print(0)
            
    elif (d == r1+r2 or d!=0 and r1 == r2+d or d!=0 and r2 == r1+d) : #외접하거나 내접할 때
        print(1)
        
    else : #두 점에서 만나는 경우
        print(2)
```
___

**문제풀이** <br/>
해당 문제는 원과 원의 접점의 개수를 구하면 되는 문제이다.<br/>
x와 y는 원의 중심위치, r은 원의 반지름이 될 수 있다. 따라서 원의 중심좌표(x,y) 두 쌍이 주어졌을 때, 두 좌표 사이의 거리를 구하고 두 원의 위치관계를 확인해야 한다.<br/>

**두 좌표 사이의 거리를 구하는 공식**<br/>
sqrt((x1-x2)^2 + (y1-y2)^2)<br/>

**위치관계와 접접의 개수** <br/>
1. 만나지 않는 경우 (접점이 0인 경우)<br/>
<img src="/images/Posting/BaekJoon/1002_02.png" alt="Project"><br/>

2. 한 점에서 만나는 경우 (접점이 1개인 경우)<br/>
<img src="/images/Posting/BaekJoon/1002_03.png" alt="Project"><br/>

3. 두 점에서 만나는 경우 (접점이 2개인 경우)<br/>
<img src="/images/Posting/BaekJoon/1002_04.png" alt="Project"><br/>

4. 두 원이 겹치는 경우 (접점이 무수히 많은 경우)<br/>
<img src="/images/Posting/BaekJoon/1002_05.png" alt="Project"><br/>




