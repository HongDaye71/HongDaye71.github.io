---
layout: post
title:  기술면접_JavaScript_04
date:   2022-04-22 12:38:35 +0300
image:  '/images/JavaScript.jpg'
tags:   [JavaScript]
---
<br/>

## 코딩의 기본 | operator/if/for/loop<br/>

___

### Contents <br/>
1. operator<br/>
2. <br/>
3. <br/>
4. <br/>


* 드림코딩 유투브 채널의 JavaScript 기초강의 내용을 바탕으로 정리하는 포스팅입니다. <br/>
* 영상에서 언급되지 않은 내용이 포함되어 있음<br/>
* [Tutorial Video](https://www.youtube.com/watch?v=YBjufjBaxHo&list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2&index=4)<br/>

___

### :bell: operator<br/>

<details>
<summary>operator</summary>
<div markdown="1">

```javascript
//1. String concentration
console.log('my' + 'cat')
console.log('1' + 2) 
console.log('elli\'s book')
console.log('elli\'s \n book')
console.log('elli\'s \t book')


//2. Numeric operator
console.log(5 % 2) 
console.log(2 ** 3) //exponentiation 


//3. Increment and decrement operator
let counter = 2;
const preIncrement = ++counter; 
/*
preIncrement : counter에 +1후 preIncrement변수에 값 할당
postIncrement : postIncrement변수에 값 할당 후 counter에 +1
++, -- 동일
*/


//4. Assignment operators
let x = 3;
x += y; // x = x+y;


//5. comparison operators
console.log(10 < 6)


//6. Logical operators : || (or), && (and), ! (not)
const value1 = false;
const value2 = 4 < 2;

function check() {
  for (let i = 0; i < 10; i++>)
  {
    console.log('wasting time');
  }
  return true;
}

console.log(`or : ${value1 || value2 || check()}`);
console.log(`or : ${value1 || value2 || check()}`);
/*
or operator
출력결과 : true
주의할 점 : or연산자는 첫 번째 조건이 true인 경우, 뒤에 조건은 더 보지 않고 tru출력. 따라서 check()처럼 비교적 연산량이 많은 조건은 뒤에 배치하는 것이 효율적임

and operator
출력결과 : false
주의할 점 : and연산자는 첫 번째 조건이 false인 경우, 뒤에 조건은 더 보지 않고 false출력.따라서 check()처럼 비교적 연산량이 많은 조건은 뒤에 배치하는 것이 효율적임
*/


//7. Eaulity
const stringFive = '5';
const numberFive = 5;
console.log(stringFive == numberFive) 
console.log(stringFive +== numberFive) 
/*
==
출력결과 : true
이유 : ==는 lose eqauplity로 type conversion을 통해 검사하기 때문에 stirng 5와 number 5가 같다는 결과 

===
출력결과 : false
이유 : ===는 strict eaulity로 type conversion을 사용하기 않기 때문에 값과 type을 모두 확인
*/

```
</div>
</details>

