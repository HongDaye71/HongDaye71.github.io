---
layout: post
title:  기술면접_JavaScript_11-13
date:   2022-04-25 12:38:35 +0300
image:  '/images/JavaScript.jpg'
tags:   [JavaScript]
---
<br/>

## 프론트엔드 개발자 입문(비동기처리) | Callback,Promise,Async,Await<br/>

### Contents <br/>
1. Callback<br/>
  (1) sync/async<br/>
2. Promise<br/>
  -
3. Async/Await<br/>
  -

* 드림코딩 유투브 채널의 JavaScript 기초강의 내용을 바탕으로 정리하는 포스팅입니다. <br/>
* 영상에서 언급되지 않은 내용이 포함되어 있음<br/>
* [Tutorial Video_11](https://www.youtube.com/watch?v=s1vpVCrT8f4&list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2&index=11)<br/>
* [Tutorial Video_12](https://www.youtube.com/watch?v=JB_yU6Oe2eE&list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2&index=12)<br/>
* [Tutorial Video_13](https://www.youtube.com/watch?v=aoQSOZfz3vQ&list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2&index=13)<br/>

___

### :bell: Callback_sync/async<br/>
**synchronous**<br/>
  - 한 개의 작업이 실행되는 동안 다른 작업은 멈춘 상태로 유지하고 자신의 차례를 기다리는 것<br/>
  - JavaScript는 동기언어로 hoising이 된 이후 순차적으로 코드를 실행<br/>
    * hoisting: var, function declaration이 자동적으로 제일 상단에 위치하게 되는 것<br/>
    ```javascript
    ```

**asynchronous**<br/>
  - 다수의 작업이 동시에 진행되는 것<br/>
  - 코드의 실행순서를 예측할 수 없음<br/>


